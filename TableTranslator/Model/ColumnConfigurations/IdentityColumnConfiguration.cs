using System;
using System.Data;
using TableTranslator.Exceptions;

namespace TableTranslator.Model.ColumnConfigurations
{
    public abstract class IdentityColumnConfiguration : BaseColumnConfiguration
    {
        private string _providedColumnName { get; }
        protected internal abstract Type DataType { get; }
        internal abstract bool IsAutoGenerated { get; }

        protected IdentityColumnConfiguration()
        {
            base.Ordinal = 0;
        }

        protected IdentityColumnConfiguration(string columnName)
        {
            this._providedColumnName = columnName;
            this.Validate();
        }

        public string ColumnName => !string.IsNullOrWhiteSpace(this._providedColumnName)
            ? this._providedColumnName
            : base.OrdinalColumnName;

        protected internal virtual DataColumn GenerateIdentityColumn() => 
            new DataColumn(this.ColumnName, this.DataType)
            {
                Unique = true
            };

        protected internal abstract object GetValue(object previousValue);

        private void Validate()
        {
            var value = GetValue(null);
            if (value == null)
            {
                throw new TableTranslatorConfigurationException(
                    "The GetValue() method for identity column configurations cannot return null values");
            }

            if (value.GetType() != this.DataType)
            {
                throw new TableTranslatorConfigurationException(
                   string.Format("The return type of 'GetValue()' and the 'DataType' property must be of the same type for identity column configurations. " +
                    "Currently the return type of 'GetValue()' is '{0}' and the type of the 'DataType' property is '{1}'", value.GetType(), this.DataType));
            }
        }
    }
}