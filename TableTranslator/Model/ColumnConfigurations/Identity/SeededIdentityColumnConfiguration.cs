using System;
using System.Data;
using TableTranslator.Exceptions;

namespace TableTranslator.Model.ColumnConfigurations.Identity
{
    public sealed class SeededIdentityColumnConfiguration : IdentityColumnConfiguration
    {
        private long IdentityIncrement { get; set; }
        private long IdentitySeed { get; set; }

        public SeededIdentityColumnConfiguration(long identitySeed = 1, long identityIncrement = 1)
            : base(typeof(long), string.Empty)
        {
            Init(identitySeed, identityIncrement);
        }

        public SeededIdentityColumnConfiguration(string columnName, long identityIncrement = 1, long identitySeed = 1)
            : base(typeof(long), columnName)
        {
            Init(identitySeed, identityIncrement);
        }

        private void Init(long identitySeed, long identityIncrement)
        {
            this.IdentityIncrement = identityIncrement;
            this.IdentitySeed = identitySeed;
            this.IsAutoGenerated = true;
            this.Validate();
        }

        protected internal override DataColumn GenerateIdentityColumn()
        {
            var column = base.GenerateIdentityColumn();
            column.AutoIncrement = true;
            column.AutoIncrementSeed = this.IdentitySeed;
            column.AutoIncrementStep = this.IdentityIncrement;
            return column;
        }

        protected internal override object GetValue(object previousValue)
        {
            throw new NotSupportedException("The value for SeededIdentityColumnConfiguration is automatically added by the data table, so the GetValue() should not be called");
        }

        private void Validate()
        {
            if (this.IdentityIncrement == 0)
            {
                throw new TableTranslatorConfigurationException("IdentityIncrement cannot be zero.");
            }
        }
    }
}